% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/generations.R
\name{generations}
\alias{generations}
\title{Convert Year of Birth to Generations.}
\usage{
generations(
  yob,
  full_names = FALSE,
  years = FALSE,
  years_sep = " ",
  years_range_sep = "–",
  as_factor = TRUE
)
}
\arguments{
\item{yob}{a vector of integers. Currently, integers are the only accepted
input, so characters and date types must be converted first.}

\item{full_names}{logical. If \code{TRUE}, the generation name will typically have
the word "generation" at the end (e.g., "Millennial" becomes "Millennial
Generation"). "Gen X" (together with Y and Z) expands to "Generation X".
\code{FALSE} by default.}

\item{years}{logical. Should the year range be included in the output? Useful
for printing, plotting, or otherwise displaying. For example, "Gen X" becomes
"Gen X (1964–1983)". \code{FALSE} by default.}

\item{years_sep}{a string. If \code{years} is \code{TRUE}, what should the
separator between the generation name and opening parenthesis in the year
range be? A single space by default, but it may look better in a visual if
a new line character (backslash + n) is used.}

\item{years_range_sep}{a string. If \code{years} is \code{TRUE}, what should
go between the start and end years. By default, an en-dash ("–"). For more
print-friendly characters, try a hyphen.}

\item{as_factor}{logical. Should the vector be returned as a factor? If so,
the levels will be chronological order (oldest generation first). If not, it
will be returned as a character vector. \code{TRUE} by default.}
}
\value{
a vector
}
\description{
This is the main function in this package. It will convert one or more years
to the corresponding generation. Generation names and years are taken from
Howe & Strauss' \href{https://en.wikipedia.org/wiki/Strauss–Howe_generational_theory}{generational theory}.
}
\details{
Note that labels are included for years between 1435 and 2030. Anything outside
of that range will return \code{NA}.
}
\examples{
# Generate some sample data
yobs <- sort(floor(runif(10, 1880, 2020)))

# Convert to the generations
generations(yobs)
generations(yobs, full_names = TRUE)
generations(yobs, full_names = TRUE, years = TRUE)
generations(yobs, years = TRUE, years_range_sep = " to ")

}
